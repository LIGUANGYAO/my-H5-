
const app = getApp()
var api = require('../../js/funs/api.js');
var bmi = require('../../js/funs/bmi.js');
var util = require('../../utils/util.js')
Page({
  data: {
    adImge1:null,
    adImge2:null,
    adLink1:null,
    adLink2:null,
    bmrWorld:null,
    bmr:null,
    registeredData:{},
    homeData:{},
    standardW: null,
    BeauBodyW: null,
    bmr: null,
    bmrMin:null,
    bmrMax:null,
    standard: null,
    beautBody: null,
    bodyTypeChinese: null,
    BMI: null,
    foodSuggestTitle:null,
    sportsuggestTitle1:null,
    sportsuggestTitle2: null,
    sportsuggestTitle3: null,
    gapStandard:null,
    gapBeauBody:null,
    instructionStaus:false,
    heightList: [],
    height: '150',
    birth: '1992-02-10',
    value: '',
    menStaus:true,
    wemStaus:false,
    sex:null,
    nickname:null,
    unionid:null,
    openStaus:false,
    leftValue:0,
    run:null,
    animationData: {},
    animationData2:{},
    animationData3:{},
    heartMin:null,
    heartMax:null,
    currentWeight:null
  },
  onLoad: function(){
    var _this = this;
    wx.setNavigationBarTitle({
      title: "健康分析"
    })

    util.getP(function(){
       _this.getProfile();
    })
  

  },
  onShow: function(){
     
    
    var _this = this;
    util.getP(function(){
      _this.getWeight();
      _this.getProfile();
      _this.getAdvertising();
    })

    setTimeout(function () {

      if (_this.data.registeredData.height && _this.data.registeredData.gender && _this.data.registeredData.age) {
        console.log("注册")

        _this.data.BMI = bmi.toMathBmi(_this.data.homeData.currentWeight, _this.data.registeredData.height);//计算BMI值
        _this.data.standard = bmi.standMeasur(_this.data.registeredData.height);//计算标准三围
        _this.data.beautBody = bmi.bodyMeasur(_this.data.registeredData.height);//计算美体三围
        _this.data.bodyTypeChinese = bmi.getBodyTypeChinese(_this.data.BMI.bmi);
        _this.data.standardW = bmi.toMathSBW(_this.data.registeredData.gender, _this.data.registeredData.height);
        _this.data.BeauBodyW = bmi.BeauBody(_this.data.registeredData.height, _this.data.registeredData.gender);
        _this.data.bmr = bmi.toMathBMR(_this.data.registeredData.gender, _this.data.homeData.currentWeight, _this.data.registeredData.height, _this.data.registeredData.age);

        _this.setData({
          BMI: _this.data.BMI,
          bodyTypeChinese: _this.data.bodyTypeChinese,
          standardW: Number(_this.data.standardW.weight).toFixed(1),
          BeauBodyW: Number(_this.data.BeauBodyW.beautWeight).toFixed(1),
          beautBody: _this.data.beautBody,
          standard: _this.data.standard,
          bmr: _this.data.bmr,
          heartMin: ((220-_this.data.registeredData.age)*0.6).toFixed(1),
          heartMax: ((220 - _this.data.registeredData.age) * 0.8).toFixed(1),
          bmrMin: _this.data.bmr - (_this.data.bmr * 0.1),
          bmrMax: _this.data.bmr + (_this.data.bmr * 0.1),
          gapStandard: (Math.abs(parseInt(_this.data.homeData.currentWeight) - parseInt(_this.data.standardW.weight)) * 2).toFixed(1),
          gapBeauBody: (Math.abs(parseInt(_this.data.BeauBodyW.beautWeight) - parseInt(_this.data.homeData.currentWeight)) * 2).toFixed(1)
        })

        util.getP(function(){
          _this.suggestAdvice();
          _this.suggestBmr();
          _this.indicator();
        })
      
        _this.setData({
          openStaus: false
        })

      } else {
        console.log("未注册")
        _this.setData({
          openStaus: true
        })
      }
    }, 800)


    _this.setData({
      height: _this.data.height,
      birth: _this.data.birth,
      sex: 1,
      heightList: _this.getStatureData()
    })

  },
  onReady: function(){

    
  },
  //获取体重数据
  getWeight: function () {
    var _this = this;
    wx.request({
      url: api.getHomeTopDate + api._p,
      method: 'GET',
      success: function (res) {

        _this.setData({
          homeData: res.data[0],
          currentWeight: ((res.data[0].currentWeight) * 2).toFixed(1)
        })
      }
    })
  },
  //获取广告数据
  getAdvertising: function () {
    var _this = this;
    var codes = ['health_1', 'health_2'];
    wx.request({
      url: api.getAdvertising  + api._p,
      method: 'POST',
      processData: false,
      data: JSON.stringify(codes),
      success: function (res) {
        _this.data.adImgeData = res.data;
        if (_this.data.adImgeData.result.data) {
          _this.setData({
            adImge2: _this.data.adImgeData.result.data[1].path,
            adLink2: _this.data.adImgeData.result.data[1].adLink,
            adImge1: _this.data.adImgeData.result.data[0].path,
            adLink1: _this.data.adImgeData.result.data[0].adLink
          })
        }
      }
    })

  },
  //运动建议 饮食建议文字
  suggestAdvice: function () {
    var _this = this;
    if (_this.data.bodyTypeChinese == '偏瘦') {

      this.setData({
        foodSuggestTitle: '主要保证有足够的热量摄入，能量摄入大于消耗，热量的食入完全来源于饮食',
        sportsuggestTitle1: '1、在健身房做无氧运动，如杠铃卧推、杠铃推举、高位下拉等;',
        sportsuggestTitle2: '2、每周训练3天，每次把全身都练一遍，一小时左右;',
        sportsuggestTitle3: '3、每个动作做1~3组，每组做12~15次;'
      })

    } else if (_this.data.bodyTypeChinese == '正常') {

      this.setData({
        foodSuggestTitle: '三大营养素的比例要均衡，碳水化合物55%-65%，蛋白质10%-12%，脂肪20%-30%',
        sportsuggestTitle1: '1、每天运动30mins，如慢跑、跳绳、游泳、骑自行车等;',
        sportsuggestTitle2: '2、运动前要热身;',
        sportsuggestTitle3: '3、运动后要做拉伸运动;'
      })

    } else if (_this.data.bodyTypeChinese == '偏胖') {
    
      _this.setData({
        foodSuggestTitle: '体型偏重的您，首要做到的是控制总能量的摄入，采取高蛋白质，低碳水化合物，低脂肪的膳食模式....',
        sportsuggestTitle1 :'1、锻炼的最佳方式应选择走、游泳、自行车等持续的周期性有氧运动;<br>',
        sportsuggestTitle2: '2、下午4-5点，这是锻炼最好的时候，消耗热量比较快;',
        sportsuggestTitle3: '3、锻炼方式多样交替，慢走——快走——走跑交替——持续慢跑——持续中速跑;'
      })

    } else if (_this.data.bodyTypeChinese == '肥胖') {

      this.setData({
        foodSuggestTitle: '针对超重的您，建议开始控制饮食，减少甜食和饮料的摄入，多选择天然的食物.....',
        sportsuggestTitle1: '1、找到自己喜欢的运动并坚持;',
        sportsuggestTitle2: '2、做燃脂类运动以加快减脂进度，每周3-5次，每次20-40分钟，控制好强度;',
        sportsuggestTitle3: '3、第一次十分钟即可，慢慢增加到30分钟左右，完全可以一直保持每周三次，每次只有15分钟的较低运动量;'
      })
    }

  },
  //bmr推荐
  suggestBmr:function(){
    var _this = this;
    if (_this.data.bmr <= 1100) {
     _this.setData({
       bmrWorld:'.....'
     })
    } else if (_this.data.bmr > 1100 && _this.data.bmr <= 1200) {
      _this.setData({
        bmrWorld: '3碗米饭+3只鸡蛋+3盘炒青菜+1个大苹果'
      })

    } else if (_this.data.bmr > 1200 && _this.data.bmr <= 1300) {
      _this.setData({
        bmrWorld: '3碗米饭+3只鸡蛋+3盘炒青菜+1个大苹果+1杯牛奶'
      })

    } else if (_this.data.bmr > 1300 && _this.data.bmr <= 1400) {

      _this.setData({
        bmrWorld: '3碗米饭+1只鸡蛋+1份煎牛扒+3盘炒青菜+1个大苹果+1杯牛奶'
      })
    } else if (_this.data.bmr > 1400 && _this.data.bmr <= 1500) {
      _this.setData({
        bmrWorld: '3碗米饭+1只鸡蛋+2份煎牛扒+3盘炒青菜+1杯牛奶'
      })
    } else if (_this.data.bmr > 1500 && _this.data.bmr <= 1600) { 
      _this.setData({
        bmrWorld: '3碗米饭+2只鸡蛋+2份煎牛扒+3盘炒青菜+1杯牛奶'
      })

    } else if (_this.data.bmr > 1600 && _this.data.bmr <= 1700) {

      _this.setData({
        bmrWorld: '3碗米饭+3只鸡蛋+2份煎牛扒+3盘炒青菜+1个大苹果'
      })

    } else if (_this.data.bmr > 1700 && _this.data.bmr <= 1800) {

      _this.setData({
        bmrWorld: '3碗米饭+3份煎牛扒+3盘炒青菜+1个大苹果'
      })


    } else if (_this.data.bmr > 1800 && _this.data.bmr <= 1900) {

      _this.setData({
        bmrWorld: '3碗米饭+3份煎牛扒+3盘炒青菜+1杯牛奶 +1个大苹果'
      })

    } else if (_this.data.bmr > 1900 && _this.data.bmr <= 2000) {

      _this.setData({
        bmrWorld: '3碗米饭+2只鸡蛋+3份煎牛扒+3盘炒青菜+1杯牛奶 +1个大苹果'
      })
    } else if (_this.data.bmr > 2000 && _this.data.bmr <= 2100) {

      _this.setData({
        bmrWorld: '3碗米饭+3只鸡蛋+3份煎牛扒+3盘炒青菜+1杯牛奶 +1个大苹果'
      })

    } else if (_this.data.bmr > 2100 && _this.data.bmr <= 2200) {
      _this.setData({
        bmrWorld: '3碗米饭+3只鸡蛋+3份煎牛扒+4盘炒青菜+1杯牛奶 +1个大苹果'
      })

    } else if (_this.data.bmr > 2200 && _this.data.bmr <= 2300) {

      _this.setData({
        bmrWorld: '3碗米饭+3只鸡蛋+3份煎牛扒+4盘炒青菜+2杯牛奶 +1个大苹果'
      })

    } else if (_this.data.bmr > 2300 && _this.data.bmr <= 2400) {

      _this.setData({
        bmrWorld: '3碗米饭+4只鸡蛋+3份煎牛扒+4盘炒青菜+2杯牛奶 +1个大苹果'
      })

    } else if (_this.data.bmr > 2400 && _this.data.bmr <= 2500) {

      _this.setData({
        bmrWorld: '3碗米饭+3只鸡蛋+3份煎牛扒+4盘炒青菜+2杯牛奶 +2个大苹果'
      })

    } else {
      _this.setData({
        bmrWorld: '.....'
      })
    }
  },
  linkAd: function () {
    var _this = this;
      wx.navigateTo({
        url: '/pages/ad/ad'
      });
  },
  toFoodSuggest: function(){
    wx.navigateTo({
      url: '/pages/foodsuggest/foodsuggest'
    });
  },
  toSportSuggest:function(){
    wx.navigateTo({
      url: '/pages/sportsuggest/sportsuggest'
    });
  },
  toBuild:function(){
    wx.navigateTo({
      url: '/pages/build/build'
    });
  },
  openInstruction: function(){
     this.setData({
       instructionStaus:true
     })
  },
  closeInstruction:function(){
    this.setData({
      instructionStaus: false
    })
  },
  //获取身高数据
  getStatureData: function () {
    var list = []
    for (var i = 70; i <= 220; i++) {
      var data = {
        id: i,
        value: i
      }
      list.push(i);
    }
    return list;
  },
  onHeightChange: function (e) {
    this.setData({
      height: this.data.heightList[e.detail.value]
    })
  },
  onBirthChange: function (e) {
    this.setData({
      birth: e.detail.value
    })
  },
  changeSex:function(e){
    var gender = e.currentTarget.dataset.gender;

    var _this = this;

    if (gender == 1) {
      _this.setData({
        menStaus: true,
        wemStaus:false,
        sex: 1
      })
    }else{
      _this.setData({
        menStaus: false,
        wemStaus: true,
        sex:2
      })
    }
 
  },
  //获取注册信息接口
  getProfile: function () {
    var _this = this;
    wx.request({
      method: 'POST',
      url: api.profile  + api._p,
      dataType: 'json',
      success: function (res) {
        if (res.data.result.data) {
          _this.setData({
            registeredData: res.data.result.data[0]
          })

          _this.setData({
            unionid: _this.data.registeredData.weChatUser.unionid
          })
        }
      }
    })
  },
  savePersoInfo: function(){
     var _this = this;
     var birth = _this.data.birth;
      birth = birth.replace(/-/g, '');

      var data = {
        unionid: _this.data.unionid,
        gender: _this.data.sex,
        height: _this.data.height,
        birthdate: birth
      }

     wx.request({
       method: "POST",
       url: api.updateUserInfo + api._p + '&' + util.getQuery(data),
       success: function (res) {

         util.getP(function(){
           _this.getProfile();
         })
           _this.setData({
             openStaus: false
           })

           setTimeout(function(){
             _this.data.BMI = bmi.toMathBmi(_this.data.homeData.currentWeight, _this.data.registeredData.height);//计算BMI值
             _this.data.standard = bmi.standMeasur(_this.data.registeredData.height);//计算标准三围
             _this.data.beautBody = bmi.bodyMeasur(_this.data.registeredData.height);//计算美体三围
             _this.data.bodyTypeChinese = bmi.getBodyTypeChinese(_this.data.BMI.bmi);
             _this.data.standardW = bmi.toMathSBW(_this.data.registeredData.gender, _this.data.registeredData.height);
             _this.data.BeauBodyW = bmi.BeauBody(_this.data.registeredData.height, _this.data.registeredData.gender);
             _this.data.bmr = bmi.toMathBMR(_this.data.registeredData.gender, _this.data.homeData.currentWeight, _this.data.registeredData.height, _this.data.registeredData.age);

             _this.setData({
               BMI: _this.data.BMI,
               bodyTypeChinese: _this.data.bodyTypeChinese,
               standardW: Number(_this.data.standardW.weight).toFixed(1),
               BeauBodyW: Number(_this.data.BeauBodyW.beautWeight).toFixed(1),
               beautBody: _this.data.beautBody,
               standard: _this.data.standard,
               bmr: _this.data.bmr,
               bmrMin: _this.data.bmr - (_this.data.bmr * 0.1),
               bmrMax: _this.data.bmr + (_this.data.bmr * 0.1),
               gapStandard: (Math.abs(parseInt(_this.data.homeData.currentWeight) - parseInt(_this.data.standardW.weight)) * 2).toFixed(1),
               gapBeauBody: (Math.abs(parseInt(_this.data.BeauBodyW.beautWeight) - parseInt(_this.data.homeData.currentWeight)) * 2).toFixed(1)
             })

           },500)

           _this.setData({
             openStaus: false
           })
       }
     })

  },
  //人物跑动
  indicator:function(){
    var _this = this;
    var bmi = this.data.BMI.bmi;
    var bmiValue = this.data.BMI.bmiValue;

    if (bmi <= bmiValue.thin) {//偏瘦
    
      if (_this.data.registeredData.gender==1){
          _this.setData({
            run: 'men1'
          })
        }else{
          _this.setData({
            run: 'women1'
          })
        }

    _this.setData({
      leftValue: (bmi / bmiValue.thin) * 20
    })   
    if (bmi<=10){
      _this.setData({
        leftValue: 4
      }) 
    }

    } else if (bmi >= bmiValue.standard && bmi < bmiValue.fat_lv1) {//正常

      
      if (_this.data.registeredData.gender == 1) {
        _this.setData({
          run: 'men2'
        })
      } else {
        _this.setData({
          run: 'women2'
        })
      }

      _this.setData({
        leftValue: ((bmi - bmiValue.standard) / (bmiValue.fat_lv1 - bmiValue.standard)) * 20 + 25
      })  
       
    } else if (bmi >= bmiValue.fat_lv1 && bmi <= bmiValue.super_fat) {//偏胖

      if (_this.data.registeredData.gender == 1) {
        _this.setData({
          run: 'men3'
        })
      } else {
        _this.setData({
          run: 'women3'
        })
      }

      _this.setData({
        leftValue: ((bmi - bmiValue.fat_lv1) / (bmiValue.super_fat - bmiValue.fat_lv1)) * 20 + 50
      })  
    
    } else if (bmi >= bmiValue.super_fat){

      if (_this.data.registeredData.gender == 1) {
        _this.setData({
          run: 'men4'
        })
      } else {
        _this.setData({
          run: 'women4'
        })
      }

      _this.setData({
        leftValue: (bmi / bmiValue.super_fat) * 20 + 60
      })
      if (bmi >= 42) {
        _this.setData({
          leftValue: 96
        })
      }

    }

    var animation = wx.createAnimation({
      duration: 2000,
      timingFunction: 'ease-in',
    })

    var animation2 = wx.createAnimation({
      duration: 2000,
      timingFunction: 'ease-in',
    })

    var animation3 = wx.createAnimation({
      duration: 2000,
      timingFunction: 'ease-in',
    })

    _this.animation = animation;
    setTimeout(function(){
      animation.left(_this.data.leftValue+'%').step();
      _this.setData({
        animationData: animation.export()
      })
    },500)

    _this.animation2 = animation2;
    setTimeout(function () {
      animation2.left((_this.data.leftValue-4) + '%').step();
      _this.setData({
        animationData2: animation2.export()
      })
    }, 500)

    _this.animation3 = animation3;
    setTimeout(function () {
      animation3.left((_this.data.leftValue-4) + '%').step();
      _this.setData({
        animationData3: animation3.export()
      })
    }, 500)

  }

})