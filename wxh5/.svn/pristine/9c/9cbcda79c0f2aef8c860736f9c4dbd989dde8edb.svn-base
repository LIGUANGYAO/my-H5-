//index.js
//获取应用实例
const app = getApp()
var wxCharts = require('../../utils/wxcharts.js');
Page({
  data: {
    userInfo: {},
    hasUserInfo: false,
    openid:null,
    msg:null,
    canIUse: wx.canIUse('button.open-type.getUserInfo'),
    d: 0,
    radian: 60,
    handle:null
  },
  onLoad: function () {

    //图表
    new wxCharts({
      canvasId: 'lineCanvas',
      type: 'line',
      animation: true,
      categories: ['2012', '2013', '2014', '2015', '2016', '2017', '2016', '2017'],
      series: [{
        data: [2, 2, 1, 2, 1, 2, 1, 2],
        format: function (val) {
          return val.toFixed(1) + '斤';
        }
      }],
      xAxis: {
         disableGrid: true
      },
      yAxis: {
        title: '',
        format: function (val) {
          return val.toFixed(1)+ '斤';
        },
        min: 0.5,
        max: 5
      },
      width: 360,
      height: 220,
      dataPointShape: true,
      extra: {
        lineStyle: 'curve'
      }
    });




    wx.setNavigationBarTitle({
      title: "共享免费秤"
    })

    var _this = this;
    setTimeout(function () {

      _this.setData({
        openid: app.globalData.openid
      })

      // setTimeout(function() {
      //   console.log(_this)
      //   wx.showToast({
      //     title:_this.data.openid
      //   })
      // },2000)

    }, 2000)


    if (app.globalData.userInfo) {
      this.setData({
        userInfo: app.globalData.userInfo,
        hasUserInfo: true
      })
    } else if (this.data.canIUse){
      // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
      // 所以此处加入 callback 以防止这种情况
      app.userInfoReadyCallback = res => {
        

      }
    } else {
      // 在没有 open-type=getUserInfo 版本的兼容处理
      wx.getUserInfo({
        success: res => {
          app.globalData.userInfo = res.userInfo
          this.setData({
            userInfo: res.userInfo,
            hasUserInfo: true
          })
        }
      })
    }
  },

  onReady:function(){
    var _this =this;

    this.draw1();
    this.draw2(60 + this.data.radian);
  },
  draw1:function(){

    var ctx = wx.createContext();
    ctx.beginPath();
    ctx.setStrokeStyle("#1d2228");

    var circle = {
      x: 80,    //圆心的x轴坐标值
      y: 75,    //圆心的y轴坐标值
      r: 60      //圆的半径
    };

    ctx.arc(circle.x, circle.y, circle.r, 0, 2 * Math.PI);
    ctx.setLineWidth(20);
    ctx.stroke();
    wx.drawCanvas({
      canvasId: 'canvas1',
      actions: ctx.getActions()
    });
  },
  draw2: function (weight){
    var _this = this;
    clearInterval(_this.data.handle);

    var ctx = wx.createContext();

    this.data.handle = setInterval(function () {
      ctx.beginPath();
      ctx.setStrokeStyle("#f9870b");
      var circle = {
        x: 80,    //圆心的x轴坐标值
        y: 75,    //圆心的y轴坐标值
        r: 60      //圆的半径
      };
      var speed = (weight - _this.data.d) / weight;
      _this.data.d += (1 + speed * 20);
      if (_this.data.d >= weight) {
        clearInterval(_this.data.handle);
      } else {
        ctx.arc(circle.x, circle.y, circle.r, Math.PI / 2, Math.PI / 2 + (_this.data.d * Math.PI) / 180);
        ctx.setLineWidth(21);
        ctx.setLineCap('round');
        ctx.stroke();
        wx.drawCanvas({
          canvasId: 'canvas2',
          actions: ctx.getActions()
        });
      }
    }, 30);   

  },
  getUserInfo: function(e) {
    console.log(e)
    app.globalData.userInfo = e.detail.userInfo
    this.setData({
      userInfo: e.detail.userInfo,
      hasUserInfo: true
    })
  }
})
